# Wooster Environment Variables Example
# Copy this file to .env and fill in your actual values.

# --- OpenAI LLM Configuration ---
OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE
OPENAI_MODEL_NAME=gpt-4o-mini
OPENAI_EMBEDDING_MODEL_NAME=text-embedding-3-small
OPENAI_TEMPERATURE=0.7
OPENAI_MAX_TOKENS=2048

# --- Routing (Local vs Cloud) ---
# Enable routing system; when disabled, Wooster uses OpenAI defaults
ROUTING_ENABLED=false
# Enable local provider and set your local MLX/OpenAI-compatible server URL
# Typical MLX chat server: http://127.0.0.1:8080
ROUTING_LOCAL_ENABLED=false
ROUTING_LOCAL_SERVER_URL=http://127.0.0.1:8080

# --- Code-Agent Configuration ---
# CHAT_MODE=code_agent # or classic_tools (default)
# CODE_AGENT_MAX_ATTEMPTS=2
# CODE_AGENT_STEP_TIMEOUT_MS=20000
# CODE_AGENT_TOTAL_TIMEOUT_MS=60000
# CODE_AGENT_MEMORY_LIMIT_MB=128
# CODE_AGENT_MAX_OUTPUT_LENGTH=10000

# --- Logging Configuration ---
# Valid log levels: DEBUG, INFO, RESPONSE, WARN, ERROR
TOOLS_LOGGING_CONSOLE_LOG_LEVEL=INFO
TOOLS_LOGGING_FILE_LOG_LEVEL=INFO
TOOLS_LOGGING_LOG_FILE=wooster_session.log
TOOLS_LOGGING_LOG_AGENT_LLM_INTERACTIONS=false
# If true, suppresses INFO and DEBUG messages from console output (WARN, ERROR, RESPONSE still show),
# unless TOOLS_LOGGING_CONSOLE_LOG_LEVEL is DEBUG (in which case quiet mode is forced false).
TOOLS_LOGGING_CONSOLE_QUIET_MODE=true

# --- User Profile Configuration ---
# Set to true to enable User Profile features.
USER_PROFILE_ENABLED=false
# Optional: Custom prompt for User Profile fact extractor. Omit or leave empty for default.
# Supports placeholders like {conversationHistory}.
USER_PROFILE_EXTRACTOR_LLM_PROMPT=

# --- Gmail Plugin Configuration ---
# Your Gmail address for sending emails.
# Required by GmailPlugin if it's enabled (see PLUGIN_GMAIL_ENABLED below).
GMAIL_SENDER_EMAIL_ADDRESS=
# Optional: User's personal email for a SELF_EMAIL_RECIPIENT placeholder (if plugin implements it).
GMAIL_USER_PERSONAL_EMAIL_ADDRESS=
# Your Gmail App Password.
# Required by GmailPlugin if it's enabled and GMAIL_SENDER_EMAIL_ADDRESS is set.
# See docs/plugins/PLUGIN_Gmail.MD for how to get an App Password.
GMAIL_APP_PASSWORD=

# --- Google Calendar Plugin Configuration ---
# Your Google Cloud OAuth 2.0 Client ID.
# Required by GCalPlugin if it's enabled (see PLUGIN_GCAL_ENABLED below).
GOOGLE_CALENDAR_CLIENT_ID=
# Your Google Cloud OAuth 2.0 Client Secret.
# Required by GCalPlugin if it's enabled.
GOOGLE_CALENDAR_CLIENT_SECRET=
# OAuth 2.0 Refresh Token for Google Calendar access.
# Required by GCalPlugin if it's enabled.
# See docs/plugins/PLUGIN_GCal.MD for how to obtain this.
GOOGLE_CALENDAR_REFRESH_TOKEN=
# Optional: ID of the Google Calendar to manage (e.g., 'primary', 'your.email@example.com'). Defaults to 'primary'.
GOOGLE_CALENDAR_ID=primary
# Optional: Email address to automatically add as an attendee to all created events.
# Leave empty or omit if you don't want a default attendee.
GOOGLE_CALENDAR_DEFAULT_ATTENDEE_EMAIL=

# --- Web Search Plugin (Tavily) Configuration ---
# Your API key for Tavily AI.
# Required by WebSearchPlugin if it's enabled (see PLUGIN_WEBSEARCH_ENABLED below).
TAVILY_API_KEY=

# --- Weather Plugin Configuration ---
# City for the weather forecast, e.g., "London,GB", "New York,US"
# Used by WeatherPlugin if it's enabled (see PLUGIN_WEATHER_ENABLED below).
WEATHER_CITY="New York,US"
# API Key for OpenWeatherMap.
# Required by WeatherPlugin if it's enabled.
OPENWEATHERMAP_API_KEY=
# Optional: Units for temperature. "C" for Celsius, "F" for Fahrenheit (default).
WEATHER_UNITS="F"

# --- Daily Review Plugin Configuration ---
# Cron schedule for when the Daily Review email is sent.
# Used by DailyReviewPlugin if it's enabled (see PLUGIN_DAILYREVIEW_ENABLED below).
# If not set, defaults to "30 6 * * *" (6:30 AM daily) in the plugin itself.
DAILY_REVIEW_SCHEDULE_CRON="30 6 * * *"

# --- Plugin Activation/Deactivation ---
# Plugins are enabled by setting their corresponding environment variable to 'true'.
# Format: PLUGIN_YOURPLUGINNAME_ENABLED=true (e.g., PLUGIN_GMAIL_ENABLED=true)
# If a plugin's variable is not set or is set to 'false', it will be disabled by default.
# Below are examples for all detected plugins. Uncomment and set to true to enable.

# PLUGIN_API_ENABLED=true
# PLUGIN_CAPTURE_ENABLED=true           # Saves items to inbox.md
# PLUGIN_DAILYREVIEW_ENABLED=true
# PLUGIN_GCAL_ENABLED=true
# PLUGIN_GMAIL_ENABLED=true
# PLUGIN_NEXTACTIONS_ENABLED=true       # Enables the Next Actions plugin for managing tasks
# PLUGIN_PERSONALHEALTH_ENABLED=true
# PLUGIN_PROJECTMANAGER_ENABLED=true    # Enables the Project Manager plugin for creating projects
# PLUGIN_SORTINBOX_ENABLED=true         # Processes items from inbox.md
# PLUGIN_TIMEMANAGEMENT_ENABLED=true    # Note: This line was duplicated below, ensure only one active or example entry
# PLUGIN_USERPROFILE_ENABLED=true
# PLUGIN_WEATHER_ENABLED=true
# PLUGIN_WEBSEARCH_ENABLED=true         # Enables web search via Tavily

# --- Unified API Plugin --- 
PLUGIN_API_ENABLED=true
PLUGIN_API_PORT=3000 # Or set this to 3333 if you prefer that port for the main API
PLUGIN_API_KEY= # Set your desired API key here if you want to test with key auth
PLUGIN_API_GLOBAL_IP_WHITELIST_ENABLED=false
PLUGIN_API_GLOBAL_ALLOWED_IPS=

# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# --- GTD and File Path Configurations ---
# These variables control where plugins store and look for their data files.
# Most paths are relative to the Wooster project root.

# For the sortInbox and capture plugins (shared inbox):
# GTD_BASE_PATH=gtd/
# GTD_INBOX_PATH=gtd/inbox.md
# GTD_PROJECTS_DIR=projects/
# GTD_ARCHIVE_DIR=logs/inboxArchive/
# GTD_NEXT_ACTIONS_PATH=gtd/next_actions.md
# GTD_NEXT_ACTIONS_VIEW_FORMAT='{checkbox} {context} {project}: {description} {dueDate}'
# GTD_SOMEDAY_MAYBE_PATH=gtd/someday_maybe.md
# GTD_WAITING_FOR_PATH=gtd/waiting_for.md

# For the personalHealth plugin:
# PERSONAL_HEALTH_DIR=health/

# --- Plugin: Daily Review ---

# Enable or disable the project manager plugin
PLUGIN_PROJECTMANAGER_ENABLED=true

# Enable or disable the frontend plugin and set its port
PLUGIN_FRONTEND_ENABLED=true
PLUGIN_FRONTEND_PORT=3000

MLX_EMBEDDINGS_ENABLED=true
MLX_EMBEDDINGS_URL=http://127.0.0.1:8081/v1
MLX_PROJECT_EMBEDDINGS_ENABLED=true
MLX_USER_EMBEDDINGS_ENABLED=true
MLX_EMBEDDINGS_MODEL=Qwen/Qwen3-Embedding-4B
MLX_EMBEDDINGS_DIMENSIONS=2560

# --- Signal notifications (signal-cli) ---
PLUGIN_SIGNAL_ENABLED=true
# Path to signal-cli binary (Apple Silicon default)
SIGNAL_CLI_PATH=/opt/homebrew/bin/signal-cli
# Your Signal number (the linked device/account)
SIGNAL_CLI_NUMBER=
# Send to this recipient (E.164, e.g., +15551234567). If empty and GROUP is empty, Note-to-Self is used.
SIGNAL_TO=
# Or send to this group id (output of `signal-cli -u <num> listGroups`)
SIGNAL_GROUP_ID=
# Command timeout in ms
SIGNAL_CLI_TIMEOUT_MS=20000