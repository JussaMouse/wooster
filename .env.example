# Wooster Environment Variables Example
# Copy this file to .env and fill in your actual values.
# This file is now the single source of configuration for Wooster.

# --- OpenAI LLM Configuration ---
# Your OpenAI API key. Required for Wooster to function.
OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE
# The OpenAI model for chat completions (e.g., gpt-4o-mini, gpt-4, gpt-3.5-turbo).
OPENAI_MODEL_NAME=gpt-4o-mini
# The OpenAI model for creating embeddings (used for RAG, UCM).
OPENAI_EMBEDDING_MODEL_NAME=text-embedding-3-small
# Controls randomness: 0.0 (deterministic) to 1.0 (more random).
OPENAI_TEMPERATURE=0.7
# Max tokens for LLM responses.
OPENAI_MAX_TOKENS=2048

# --- Logging Configuration (Managed as part of Tools settings) ---
# Valid log levels: DEBUG, INFO, WARN, ERROR, ALL, OFF
# Console log level.
TOOLS_LOGGING_CONSOLE_LOG_LEVEL=INFO
# File log level.
TOOLS_LOGGING_FILE_LOG_LEVEL=INFO
# Path to the log file. Default: logs/wooster_session_YYYY-MM-DD_HH-MM-SS.log.
# Set to empty string or omit to disable file logging (console only).
TOOLS_LOGGING_LOG_FILE=wooster_session.log
# If true, logs detailed LLM prompts and responses (can be very verbose).
TOOLS_LOGGING_LOG_AGENT_LLM_INTERACTIONS=false
# If true, suppresses INFO and DEBUG messages from console output (WARN and ERROR still show).
TOOLS_LOGGING_CONSOLE_QUIET_MODE=false
# Bootstrap log level for messages *before* full configuration is parsed.
# This is a global Node.js env var, not part of Wooster's config object.
# LOG_LEVEL=DEBUG

# --- User Contextual Memory (UCM) Configuration (Managed as part of Tools settings) ---
# Set to true to enable UCM.
TOOLS_UCM_ENABLED=true
# Optional: Custom prompt for UCM fact extractor. Omit or leave empty for default.
# Supports placeholders like {conversationHistory}.
TOOLS_UCM_EXTRACTOR_LLM_PROMPT=

# --- Core Tools Configuration ---
# Settings for built-in tools or tools provided by core plugins.

# --- Email Tool (Provided by GmailPlugin) ---
# Set to true to enable the email tool features within GmailPlugin.
TOOLS_EMAIL_ENABLED=false
# Required if TOOLS_EMAIL_ENABLED=true. Your Gmail address.
TOOLS_EMAIL_SENDER_EMAIL_ADDRESS=
# Optional: User's personal email for SELF_EMAIL_RECIPIENT placeholder.
TOOLS_EMAIL_USER_PERSONAL_EMAIL_ADDRESS=
# Required if TOOLS_EMAIL_ENABLED=true. Your Gmail App Password.
# See docs/plugins/PLUGIN_Gmail.MD for how to get an App Password.
TOOLS_EMAIL_EMAIL_APP_PASSWORD=

# --- Google Calendar Tools (Provided by GoogleCalendarPlugin) ---
# Set to true to enable Google Calendar features within GoogleCalendarPlugin.
TOOLS_GOOGLE_CALENDAR_ENABLED=false
# Required if TOOLS_GOOGLE_CALENDAR_ENABLED=true. Your Google Cloud OAuth 2.0 Client ID.
GOOGLE_CLIENT_ID=
# Required if TOOLS_GOOGLE_CALENDAR_ENABLED=true. Your Google Cloud OAuth 2.0 Client Secret.
GOOGLE_CLIENT_SECRET=
# Required if TOOLS_GOOGLE_CALENDAR_ENABLED=true. OAuth 2.0 Refresh Token for Google Calendar access.
# See docs/plugins/PLUGIN_GoogleCalendar.MD for how to obtain this.
GOOGLE_CALENDAR_REFRESH_TOKEN=
# Optional: ID of the Google Calendar to manage (e.g., 'primary', 'your.email@example.com'). Defaults to 'primary'.
GOOGLE_CALENDAR_ID=primary

# --- Web Search Tool (Tavily) ---
# Set to true to enable the web search tool. Auto-disables if TAVILY_API_KEY is missing.
TOOLS_WEB_SEARCH_ENABLED=true # Default is true if TAVILY_API_KEY is present
# Required if web search is enabled. Your API key for Tavily AI.
TAVILY_API_KEY=YOUR_TAVILY_API_KEY_HERE

# --- Plugin Activation ---
# Plugins found in src/plugins/ are ENABLED BY DEFAULT if their specific enablement flag (below) is not set to false.
# To explicitly disable a specific plugin, set its variable to false.
# The [PLUGINNAME] should match the plugin's 'name' property (UPPERCASED and spaces removed/underscored if any).

# Example: Explicitly enable (default) or disable GmailPlugin
# PLUGIN_GMAILPLUGIN_ENABLED=true
# PLUGIN_GMAILPLUGIN_ENABLED=false

# Example: Explicitly enable (default) or disable GoogleCalendarPlugin
# PLUGIN_GOOGLECALENDARPLUGIN_ENABLED=true
# PLUGIN_GOOGLECALENDARPLUGIN_ENABLED=false

# Generic example for disabling another plugin (replace MYCUSTOMPLUGIN with the actual plugin name):
# PLUGIN_MYCUSTOMPLUGIN_ENABLED=false 