# Wooster Environment Variables Example
# Copy this file to .env and fill in your actual values.
# This file is now the single source of configuration for Wooster.

# --- OpenAI Configuration ---
OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE
OPENAI_MODEL_NAME=gpt-4o-mini

# --- Logging Configuration ---
# Valid log levels: DEBUG, INFO, WARN, ERROR
LOGGING_CONSOLE_LOG_LEVEL=INFO
LOGGING_FILE_LOG_LEVEL=INFO
# Set to an empty string or omit to disable file logging. Example: LOGGING_LOG_FILE=
LOGGING_LOG_FILE=wooster_session.log
LOGGING_LOG_AGENT_LLM_INTERACTIONS=false
# If true, only WARN and ERROR messages will be shown on the console.
# INFO and DEBUG messages will be suppressed on the console. File logging is unaffected.
LOGGING_CONSOLE_QUIET_MODE=false

# --- Email Tool Configuration ---
EMAIL_ENABLED=false
# Required if EMAIL_ENABLED=true
EMAIL_SENDING_EMAIL_ADDRESS=
# Optional: User's personal email for SELF_EMAIL_RECIPIENT placeholder in email tool
EMAIL_USER_PERSONAL_EMAIL_ADDRESS=
# Required if EMAIL_ENABLED=true (e.g., Gmail App Password)
EMAIL_EMAIL_APP_PASSWORD=

# --- User Contextual Memory (UCM) Configuration ---
UCM_ENABLED=false
# Optional: Custom prompt for UCM extractor. Omit or leave empty for default.
UCM_EXTRACTOR_LLM_PROMPT=

# --- Google Integration Configuration ---
# Shared Google Cloud OAuth 2.0 credentials. Used by Google Calendar, etc.
# Get these from Google Cloud Console.
# Ensure these are kept secret and this .env file is in .gitignore
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# --- Google Calendar Specific Configuration ---
# Enable/disable Google Calendar features
GOOGLE_CALENDAR_ENABLED=false
# Required if GOOGLE_CALENDAR_ENABLED=true. This is a service-specific refresh token.
GOOGLE_CALENDAR_REFRESH_TOKEN=
# ID of the calendar Wooster will primarily use (e.g., 'primary'). Used if GOOGLE_CALENDAR_ENABLED=true.
GOOGLE_CALENDAR_ID=primary

# --- Plugin Activation ---
# For each plugin found in src/plugins, you can explicitly enable or disable it.
# The plugin name is the filename without .ts (e.g., loggerPlugin for loggerPlugin.ts).
# If a plugin is not listed here, it defaults to being ENABLED.
# Example: To disable a plugin named 'examplePlugin', add:
# PLUGIN_EXAMPLEPLUGIN_ENABLED=false
# Example: To explicitly enable a plugin named 'anotherPlugin' (though it's enabled by default if not listed):
# PLUGIN_ANOTHERPLUGIN_ENABLED=true

# --- Bootstrap Log Level (for very early console messages) ---
# This controls console logs BEFORE the main config (above) is loaded.
# LOG_LEVEL=DEBUG 